spring.application.name=SmartContactManager

# To change port of the application
server.port=8080

# Database configuration (for postgre SQl)
spring.datasource.url=jdbc:postgresql://localhost:5432/SmartContactManager
spring.datasource.username=postgres
spring.datasource.password=Prashant@123

logging.level.org.hibernate.SQL=DEBUG




# JPA configuration
spring.jpa.show-sql=true

# For creating schema and tables via hibernate
spring.jpa.hibernate.ddl-auto=update

# To tell Hibernate like we are using postgreSql i.e it can convert/genrate postgres query
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


#Email configuration


#application running on dev mode i.e if you make any change and save the file then no need to restart the server
spring.profiles.active=dev

# spring.security.user.name=prashant@gmail.com
# spring.security.user.password=prashant


#Google configuration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=243254382212umkoac3fe6can2uv2f4135i02538jj2f.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

#Github configuration
spring.security.oauth2.client.registration.github.client-name=Github
spring.security.oauth2.client.registration.github.client-id=Ov23li1dRy78eFW0CPkS
spring.security.oauth2.client.registration.github.client-secret=9659f2871c0cb4946ae60cd3d1fe2ff64c78c287
spring.security.oauth2.client.registration.github.scope=profile,email

#Cloudinary configuration
cloudinary.cloud_name=do1by3sk0
cloudinary.api-key=155578676596966
cloudinary.api-secret=jZm1x7s4aFmCmQBYKNNXIqbZi80

#Max file size our spring application can handle after that it will fail
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB


